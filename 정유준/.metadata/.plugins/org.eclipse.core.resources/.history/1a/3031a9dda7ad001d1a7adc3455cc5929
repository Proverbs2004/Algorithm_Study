package day2016;

import java.util.Scanner;

public class SWEA_Test {
	static Scanner sc = new Scanner(System.in);
	static int[][] ladder = new int[100][100];
	static int[] xWay = { 0, 1, -1 };
	static int[] yWay = { 1, 0, 0 };
	static int direction = 0;
	static int x;
	static int y;
	static int answer;

	static void input() {
		int testCase = sc.nextInt();
		for (int yidx = 0; yidx < 100; yidx++) {
			for (int xidx = 0; xidx < 100; xidx++) {
				ladder[yidx][xidx] = sc.nextInt();
			}
		}

		for (int yidx = 0; yidx < 100; yidx++) {
			for (int xidx = 0; xidx < 100; xidx++) {
				System.out.print(ladder[yidx][xidx]);
			}
			System.out.println();
		}

	}

	static void findWay() {
		for (int idx = 0; idx < 100; idx++) {
			x = idx;
			y = 0;
			if (ladder[0][x] == 1) {
				while (y != 99) {
					findDirection();
					if (direction == 0) {
						while (ladder[y + 1][x] != 0) {
							x += xWay[direction];
						y += yWay[direction];
						}
					} else if (direction == 1) {
						while(ladder[y][x+1] != 0)
					}
				}
			}
			if (ladder[99][x] == 2) {
				answer = idx;
				break;
			}
		}
	}

	static void findDirection() {
		// 왼쪽 끝에서 오른쪽이 1인경우 -> 오른쪽으로
		if (x == 0 && ladder[y][1] == 1) {
			direction = 1;
			// 왼쪽 끝에서 오른쪽이 1이 아닌경우 -> 아래로
		} else if (x == 0 && ladder[y][1] == 0) {
			direction = 0;
			// 오른쪽 끝에서 왼쪽이 1인경우 -> 왼쪽으로
		} else if (x == 99 & ladder[y][98] == 1) {
			direction = 2;
			// 오른쪽 끝에서 왼쪽이 1이 아닌경우 -> 아래로
		} else if (x == 99 && ladder[y][98] == 0) {
			direction = 0;
			// 양쪽 사이드가 아닌 곳에서의 방향찾기
		} else if (x != 99 && x != 0) {
			// 양쪽이 있는 상태에서
			if (ladder[y][x + 1] == 1) {
				direction = 1;
				System.out.println(1);
			} else if (ladder[y][x - 1] == 1) {
				direction = 2;
				System.out.println(2);
			} else if (ladder[y][x + 1] != 1 && ladder[y][x - 1] != 1) {
				direction = 0;
				System.out.println(3);
			}
		}
	}

	public static void main(String[] args) {
		input();
		findWay();
	}
}
